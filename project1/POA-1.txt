{\rtf1\ansi\ansicpg950\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Ching-Wei Lin\
#987563037\
Project-1\
\
Before I start  to implementing the project, I separate the project into two parts. First part I call it the \'93frame\'94 part, which it doing the connection job, which make sure all the method and the class are in the right place. To ensure there is no any syntax error or compile problem. Also, this part do the displaying job to see if the project works correctly. Second part i call it the \'93checking\'94 part since there a big portion of this project is testing to arguments to make sure they are in the right format.\
\
In the first part, I spent a lot of time getting familiar with the IDE and the maven system. I created a phonebill class for placing my multiple phonecalls. I designed its as a linear linked list, so I can display all of phoncalls and be able to choose which one to operate. Then, I created a project1 function to place my main function. In the main function, I built a phonebill object and add multiple phonecalls in it by passing arguments for filling it all the data. The user has an option to enter data as well. After entering the data, there are several commands for displaying the data in it. I built it as an operating interface with multiple choose. The user can operating it until they want to quit the system.\
\
In the second part, I separate it into two parts again. The first one is phone number part. In this part my goal is to testing if the arguments for phone number are in right format. I divided the arguments into three parts since the number is nnn-nnn-nnnn. I broke the arguments into nnn, -, nnn, -, nnnn and test if the argument has two \'93-\'93 and also each n is a number. The second part is date and time part. In this part I divide the argument into mm, /, dd, /, yyyy, \'93 \'93, hh, :, mm. I test the argument if it has /, /, \'93 \'93 and : in the right position. Also test the argument if mm in the range of 1~12, dd in the range of related month, yyyy in the range of 0000~9999, hh in the range of 00~23 and mm in the range of 01~60.}